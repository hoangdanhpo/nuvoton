C51 COMPILER V9.60.0.0   HW_INIT                                                           04/13/2022 13:58:17 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE HW_INIT
OBJECT MODULE PLACED IN .\Objects\HW_init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE SRC\HW_init.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\INC) DEFINE(FOSC_160000)
                    - DEBUG OBJECTEXTEND PRINT(.\Listings\HW_init.lst) TABS(2) OBJECT(.\Objects\HW_init.obj)

line level    source

   1          #include "main.h"
   2          #include "overcurrent.h"
   3          #include "logo.h"
   4          #include "num.h"
   5          /*------------------------- HW-------------------------*/
   6          void HW_init(void)
   7          {
   8   1        EXT0_config();
   9   1        InitPWM();
  10   1        set_PWMRUN;
  11   1        
  12   1        P11_PushPull_Mode;    // LED
  13   1        P11 = 1;
  14   1        
  15   1        P10_PushPull_Mode;   // BUZZ
  16   1        P10 = 0;
  17   1        
  18   1        P15_Input_Mode;      // CONTINUOUS PIN
  19   1        P12_Input_Mode;      // PEDAL PIN
  20   1        P03_Input_Mode;      // ENC PIN
  21   1        
  22   1        Enable_ADC_AIN2; 
  23   1      
  24   1        set_EADC;
  25   1        EA = 1;          //Enable global interrupt
  26   1        
  27   1        InitTimer1();
  28   1        
  29   1        OLED_Init();
  30   1        OLED_DrawBMP(0,0,128,8,logo);
  31   1        Timer0_Delay1ms(2000);
  32   1        OLED_Clear();
  33   1        Timer0_Delay1ms(100);
  34   1        //num_chuc(0);
  35   1        num_donvi(5);
  36   1        OLED_DrawBMP(56,5,64,6,dot);
  37   1        num_float(0);
  38   1      
  39   1        clr_LOAD;
  40   1      }
  41          void InitTimer1(void)
  42          {   TMOD |= (1 << 4);
  43   1        
  44   1          clr_T1M;        /* T1M=0, Timer0 Clock = Fsys/12 */
  45   1        TMOD &= ~(1 << 5);
  46   1          
  47   1          /* Calculate the timer counter value for controlling the interrupt period on 10ms. */
  48   1          TL1 = LOBYTE(TIMER_DIV12_VALUE_1ms);  //Find  define in "Function_define.h" "TIMER VALUE"
  49   1          TH1 = HIBYTE(TIMER_DIV12_VALUE_1ms);
  50   1      
  51   1          set_ET1;        /* enable Timer0 interrupt */
  52   1          set_EA;
  53   1          set_TR1;        /* Timer0 start */
  54   1      }
C51 COMPILER V9.60.0.0   HW_INIT                                                           04/13/2022 13:58:17 PAGE 2   

  55          /*------------------------- ETX0-------------------------*/
  56          void EXT0_config(void)
  57          {
  58   1        P17_Input_Mode; 
  59   1        P30_Input_Mode; 
  60   1        set_P3S_0;
  61   1        set_IT0;
  62   1        set_EX0;
  63   1        set_EA; 
  64   1      }
  65          /*--------------------------PWM----------------------------*/ 
  66          void InitPWM(void)
  67          {
  68   1          /* Initialize the pwm mode and clock. */
  69   1          P04_PushPull_Mode;
  70   1          PWM3_P04_OUTPUT_ENABLE;
  71   1         /*PMW clock source select define*/
  72   1          PWM_CLOCK_DIV_4;
  73   1          /*PWM type define*/
  74   1          PWM_EDGE_TYPE;
  75   1          /*clear PWM 12bit counter*/
  76   1          set_CLRPWM;
  77   1          /*PWM mode define*/
  78   1          PWM_IMDEPENDENT_MODE;
  79   1          /**********************************************************************
  80   1          PWM frequency = Fpwm/((PWMPH,PWMPL) + 1) <Fpwm = Fsys/PWM_CLOCK_DIV> 
  81   1                        = (16MHz/4)/(0x9F + 1)
  82   1                        = 25KHz
  83   1          ***********************************************************************/
  84   1      /*  
  85   1        PWMPH = 0x00;
  86   1          PWMPL = 0x9F;
  87   1        */
  88   1          PWMPH = 0x00;
  89   1          PWMPL = 0xC7;
  90   1      }
  91          void PWM_duty(uint16_t duty)
  92          {
  93   1        PWM3H = HIBYTE(duty);
  94   1        PWM3L = LOBYTE(duty);
  95   1        set_LOAD;
  96   1      }
  97          
  98          /*-------------------------DISPLAY-------------------------*/
  99          void Display_cont_on(void)
 100          {
 101   1        OLED_Clear();
 102   1        OLED_ShowString(25,2,"CONTINUOUS",16);
 103   1        OLED_ShowString(60,4,"ON",16);
 104   1      
 105   1      }
 106          void Display_cont_off(void)
 107          {
 108   1        OLED_Clear();
 109   1        OLED_ShowString(25,2,"CONTINUOUS",16);
 110   1        OLED_ShowString(57,4,"OFF",16);
 111   1      
 112   1      }
 113          void num_float(uint8_t num)
 114          {
 115   1        switch (num)
 116   1        {
C51 COMPILER V9.60.0.0   HW_INIT                                                           04/13/2022 13:58:17 PAGE 3   

 117   2          case 0:
 118   2          {
 119   3            OLED_DrawBMP(64,1,88,6,zero);
 120   3            break;
 121   3          }
 122   2          case 1:
 123   2          {
 124   3            OLED_DrawBMP(64,1,88,6,one);
 125   3            break;
 126   3          }
 127   2          case 2:
 128   2          {
 129   3            OLED_DrawBMP(64,1,88,6,two);
 130   3            break;
 131   3          }
 132   2          case 3:
 133   2          {
 134   3            OLED_DrawBMP(64,1,88,6,three);
 135   3            break;
 136   3          }
 137   2          case 4:
 138   2          {
 139   3            OLED_DrawBMP(64,1,88,6,four);
 140   3            break;
 141   3          }
 142   2          case 5:
 143   2          {
 144   3            OLED_DrawBMP(64,1,88,6,five);
 145   3            break;
 146   3          }
 147   2          case 6:
 148   2          {
 149   3            OLED_DrawBMP(64,1,88,6,six);
 150   3            break;
 151   3          }
 152   2          case 7:
 153   2          {
 154   3            OLED_DrawBMP(64,1,88,6,seven);
 155   3            break;
 156   3          }
 157   2          case 8:
 158   2          {
 159   3            OLED_DrawBMP(64,1,88,6,eight);
 160   3            break;
 161   3          }
 162   2          case 9:
 163   2          {
 164   3            OLED_DrawBMP(64,1,88,6,nine);
 165   3            break;
 166   3          }
 167   2        }
 168   1      }
 169          void num_donvi(uint8_t num)
 170          {
 171   1        switch (num)
 172   1        {
 173   2          case 0:
 174   2          {
 175   3            OLED_DrawBMP(32,1,56,6,zero);
 176   3            break;
 177   3          }
 178   2          case 1:
C51 COMPILER V9.60.0.0   HW_INIT                                                           04/13/2022 13:58:17 PAGE 4   

 179   2          {
 180   3            OLED_DrawBMP(32,1,56,6,one);
 181   3            break;
 182   3          }
 183   2          case 2:
 184   2          {
 185   3            OLED_DrawBMP(32,1,56,6,two);
 186   3            break;
 187   3          }
 188   2          case 3:
 189   2          {
 190   3            OLED_DrawBMP(32,1,56,6,three);
 191   3            break;
 192   3          }
 193   2          case 4:
 194   2          {
 195   3            OLED_DrawBMP(32,1,56,6,four);
 196   3            break;
 197   3          }
 198   2          case 5:
 199   2          {
 200   3            OLED_DrawBMP(32,1,56,6,five);
 201   3            break;
 202   3          }
 203   2          case 6:
 204   2          {
 205   3            OLED_DrawBMP(32,1,56,6,six);
 206   3            break;
 207   3          }
 208   2          case 7:
 209   2          {
 210   3            OLED_DrawBMP(32,1,56,6,seven);
 211   3            break;
 212   3          }
 213   2          case 8:
 214   2          {
 215   3            OLED_DrawBMP(32,1,56,6,eight);
 216   3            break;
 217   3          }
 218   2          case 9:
 219   2          {
 220   3            OLED_DrawBMP(32,1,56,6,nine);
 221   3            break;
 222   3          }
 223   2        }
 224   1      }
 225          void num_chuc(uint8_t num)
 226          {
 227   1        switch (num)
 228   1        {
 229   2          case 0:
 230   2          {
 231   3            OLED_DrawBMP(8,1,32,6,zero);
 232   3            break;
 233   3          }
 234   2          case 1:
 235   2          {
 236   3            OLED_DrawBMP(8,1,32,6,one);
 237   3            break;
 238   3          }
 239   2          case 2:
 240   2          {
C51 COMPILER V9.60.0.0   HW_INIT                                                           04/13/2022 13:58:17 PAGE 5   

 241   3            OLED_DrawBMP(8,1,32,6,two);
 242   3            break;
 243   3          }
 244   2          case 3:
 245   2          {
 246   3            OLED_DrawBMP(8,1,32,6,three);
 247   3            break;
 248   3          }
 249   2          case 4:
 250   2          {
 251   3            OLED_DrawBMP(8,1,32,6,four);
 252   3            break;
 253   3          }
 254   2          case 5:
 255   2          {
 256   3            OLED_DrawBMP(8,1,32,6,five);
 257   3            break;
 258   3          }
 259   2          case 6:
 260   2          {
 261   3            OLED_DrawBMP(8,1,32,6,six);
 262   3            break;
 263   3          }
 264   2          case 7:
 265   2          {
 266   3            OLED_DrawBMP(8,1,32,6,seven);
 267   3            break;
 268   3          }
 269   2          case 8:
 270   2          {
 271   3            OLED_DrawBMP(8,1,32,6,eight);
 272   3            break;
 273   3          }
 274   2          case 9:
 275   2          {
 276   3            OLED_DrawBMP(8,1,32,6,nine);
 277   3            break;
 278   3          }
 279   2        }
 280   1      }
 281          void Show_Voltage(double v_floatNum_f32)
 282          {           
 283   1        uint32_t v_temp_u32;
 284   1        uint8_t donvi;
 285   1        uint8_t chuc;
 286   1        v_temp_u32 = (uint32_t) v_floatNum_f32;
 287   1        chuc = v_temp_u32/10;
 288   1        donvi = v_temp_u32%10;
 289   1        if( chuc > 0)  num_chuc(chuc);
 290   1        else OLED_DrawBMP(8,1,32,6,clear);
 291   1        //OLED_Clear();
 292   1        num_donvi(donvi);
 293   1        v_floatNum_f32 = v_floatNum_f32 - v_temp_u32;
 294   1        v_temp_u32 = v_floatNum_f32 * 10;
 295   1        OLED_DrawBMP(56,5,64,6,dot);
 296   1        num_float(v_temp_u32);
 297   1      } 
 298          void displayProtect(void)
 299          {
 300   1        OLED_DrawBMP(0,0,128,8,overcurrent);
 301   1        LED_PIN = 0;
 302   1        BUZZ_PIN = 1;
C51 COMPILER V9.60.0.0   HW_INIT                                                           04/13/2022 13:58:17 PAGE 6   

 303   1        Timer0_Delay1ms(500);
 304   1        BUZZ_PIN = 0;
 305   1        Timer0_Delay1ms(500);
 306   1        BUZZ_PIN = 1;
 307   1        Timer0_Delay1ms(500);
 308   1        BUZZ_PIN = 0;
 309   1        Timer0_Delay1ms(500);
 310   1        BUZZ_PIN = 1;
 311   1        Timer0_Delay1ms(500);
 312   1        BUZZ_PIN = 0;
 313   1        Timer0_Delay1ms(500);
 314   1        LED_PIN = 0;
 315   1        OLED_Clear();
 316   1      }
 317          
 318          unsigned int ADC_read(void){
 319   1        unsigned int adc_value = 0x0000;
 320   1        ADCCON1|=0X30;            /* clock divider */
 321   1        ADCCON2|=0X0E;            /* AQT time */
 322   1        AUXR1|=SET_BIT4;          /* ADC clock low speed */
 323   1        clr_ADCF;              
 324   1        set_ADCS;                   
 325   1        while(ADCF == 0);
 326   1        adc_value = ADCRH;
 327   1        adc_value <<= 4;
 328   1        adc_value |= ADCRL;
 329   1        return adc_value;
 330   1      }
 331          
 332          
 333          void SW_Reset(void)
 334          {
 335   1          TA = 0xAA;
 336   1          TA = 0x55;
 337   1          set_SWRST;
 338   1      }
 339          void set_ADC_comparator_value(unsigned int value)
 340          {
 341   1        ADCMPH = ((value & 0x0FF0) >> 4);
 342   1        ADCMPL = (value & 0x000F);
 343   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1354    ----
   CONSTANT SIZE    =   4418    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      10
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
